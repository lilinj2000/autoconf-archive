@node ax_prog_doxygen
@unnumberedsec ax_prog_doxygen

@majorheading Synopsis

@smallexample
DX_INIT_DOXYGEN(PROJECT-NAME, DOXYFILE-PATH, [OUTPUT-DIR])
DX_DOXYGEN_FEATURE(ON|OFF)
DX_DOT_FEATURE(ON|OFF)
DX_HTML_FEATURE(ON|OFF)
DX_CHM_FEATURE(ON|OFF)
DX_CHI_FEATURE(ON|OFF)
DX_MAN_FEATURE(ON|OFF)
DX_RTF_FEATURE(ON|OFF)
DX_XML_FEATURE(ON|OFF)
DX_PDF_FEATURE(ON|OFF)
DX_PS_FEATURE(ON|OFF)
@end smallexample

@majorheading Description

The DX_*_FEATURE macros control the default setting for the given
Doxygen feature. Supported features are 'DOXYGEN' itself, 'DOT' for
generating graphics, 'HTML' for plain HTML, 'CHM' for compressed HTML
help (for MS users), 'CHI' for generating a seperate .chi file by the
.chm file, and 'MAN', 'RTF', 'XML', 'PDF' and 'PS' for the appropriate
output formats. The environment variable DOXYGEN_PAPER_SIZE may be
specified to override the default 'a4wide' paper size.

By default, HTML, PDF and PS documentation is generated as this seems to
be the most popular and portable combination. MAN pages created by
Doxygen are usually problematic, though by picking an appropriate subset
and doing some massaging they might be better than nothing. CHM and RTF
are specific for MS (note that you can't generate both HTML and CHM at
the same time). The XML is rather useless unless you apply specialized
post-processing to it.

The macros mainly control the default state of the feature. The use can
override the default by specifying --enable or --disable. The macros
ensure that contradictory flags are not given (e.g.,
--enable-doxygen-html and --enable-doxygen-chm,
--enable-doxygen-anything with --disable-doxygen, etc.) Finally, each
feature will be automatically disabled (with a warning) if the required
programs are missing.

Once all the feature defaults have been specified, call DX_INIT_DOXYGEN
with the following parameters: a one-word name for the project for use
as a filename base etc., an optional configuration file name (the
default is 'Doxyfile', the same as Doxygen's default), and an optional
output directory name (the default is 'doxygen-doc').

Automake Support

The following is a template aminclude.am file for use with Automake.
Make targets and variables values are controlled by the various
DX_COND_* conditionals set by autoconf.

The provided targets are:

@smallexample
  doxygen-doc: Generate all doxygen documentation.
@end smallexample

@smallexample
  doxygen-run: Run doxygen, which will generate some of the
               documentation (HTML, CHM, CHI, MAN, RTF, XML)
               but will not do the post processing required
               for the rest of it (PS, PDF, and some MAN).
@end smallexample

@smallexample
  doxygen-man: Rename some doxygen generated man pages.
@end smallexample

@smallexample
  doxygen-ps:  Generate doxygen PostScript documentation.
@end smallexample

@smallexample
  doxygen-pdf: Generate doxygen PDF documentation.
@end smallexample

Note that by default these are not integrated into the automake targets.
If doxygen is used to generate man pages, you can achieve this
integration by setting man3_MANS to the list of man pages generated and
then adding the dependency:

@smallexample
  $(man3_MANS): doxygen-doc
@end smallexample

This will cause make to run doxygen and generate all the documentation.

The following variable is intended for use in Makefile.am:

@smallexample
  DX_CLEANFILES = everything to clean.
@end smallexample

Then add this variable to MOSTLYCLEANFILES.

@smallexample
  ----- begin aminclude.am -------------------------------------
@end smallexample

@smallexample
  ## --------------------------------- ##
  ## Format-independent Doxygen rules. ##
  ## --------------------------------- ##
@end smallexample

@smallexample
  if DX_COND_doc
@end smallexample

@smallexample
  ## ------------------------------- ##
  ## Rules specific for HTML output. ##
  ## ------------------------------- ##
@end smallexample

@smallexample
  if DX_COND_html
@end smallexample

@smallexample
  DX_CLEAN_HTML = @@DX_DOCDIR@@/html
@end smallexample

@smallexample
  endif DX_COND_html
@end smallexample

@smallexample
  ## ------------------------------ ##
  ## Rules specific for CHM output. ##
  ## ------------------------------ ##
@end smallexample

@smallexample
  if DX_COND_chm
@end smallexample

@smallexample
  DX_CLEAN_CHM = @@DX_DOCDIR@@/chm
@end smallexample

@smallexample
  if DX_COND_chi
@end smallexample

@smallexample
  DX_CLEAN_CHI = @@DX_DOCDIR@@/@@PACKAGE@@.chi
@end smallexample

@smallexample
  endif DX_COND_chi
@end smallexample

@smallexample
  endif DX_COND_chm
@end smallexample

@smallexample
  ## ------------------------------ ##
  ## Rules specific for MAN output. ##
  ## ------------------------------ ##
@end smallexample

@smallexample
  if DX_COND_man
@end smallexample

@smallexample
  DX_CLEAN_MAN = @@DX_DOCDIR@@/man
@end smallexample

@smallexample
  endif DX_COND_man
@end smallexample

@smallexample
  ## ------------------------------ ##
  ## Rules specific for RTF output. ##
  ## ------------------------------ ##
@end smallexample

@smallexample
  if DX_COND_rtf
@end smallexample

@smallexample
  DX_CLEAN_RTF = @@DX_DOCDIR@@/rtf
@end smallexample

@smallexample
  endif DX_COND_rtf
@end smallexample

@smallexample
  ## ------------------------------ ##
  ## Rules specific for XML output. ##
  ## ------------------------------ ##
@end smallexample

@smallexample
  if DX_COND_xml
@end smallexample

@smallexample
  DX_CLEAN_XML = @@DX_DOCDIR@@/xml
@end smallexample

@smallexample
  endif DX_COND_xml
@end smallexample

@smallexample
  ## ----------------------------- ##
  ## Rules specific for PS output. ##
  ## ----------------------------- ##
@end smallexample

@smallexample
  if DX_COND_ps
@end smallexample

@smallexample
  DX_CLEAN_PS = @@DX_DOCDIR@@/@@PACKAGE@@.ps
@end smallexample

@smallexample
  DX_PS_GOAL = doxygen-ps
@end smallexample

@smallexample
  doxygen-ps: @@DX_DOCDIR@@/@@PACKAGE@@.ps
@end smallexample

@smallexample
  @@DX_DOCDIR@@/@@PACKAGE@@.ps: @@DX_DOCDIR@@/@@PACKAGE@@.tag
      cd @@DX_DOCDIR@@/latex; \
      rm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
      $(DX_LATEX) refman.tex; \
      $(MAKEINDEX_PATH) refman.idx; \
      $(DX_LATEX) refman.tex; \
      countdown=5; \
      while $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \
                        refman.log > /dev/null 2>&1 \
         && test $$countdown -gt 0; do \
          $(DX_LATEX) refman.tex; \
          countdown=`expr $$countdown - 1`; \
      done; \
      $(DX_DVIPS) -o ../@@PACKAGE@@.ps refman.dvi
@end smallexample

@smallexample
  endif DX_COND_ps
@end smallexample

@smallexample
  ## ------------------------------ ##
  ## Rules specific for PDF output. ##
  ## ------------------------------ ##
@end smallexample

@smallexample
  if DX_COND_pdf
@end smallexample

@smallexample
  DX_CLEAN_PDF = @@DX_DOCDIR@@/@@PACKAGE@@.pdf
@end smallexample

@smallexample
  DX_PDF_GOAL = doxygen-pdf
@end smallexample

@smallexample
  doxygen-pdf: @@DX_DOCDIR@@/@@PACKAGE@@.pdf
@end smallexample

@smallexample
  @@DX_DOCDIR@@/@@PACKAGE@@.pdf: @@DX_DOCDIR@@/@@PACKAGE@@.tag
      cd @@DX_DOCDIR@@/latex; \
      rm -f *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
      $(DX_PDFLATEX) refman.tex; \
      $(DX_MAKEINDEX) refman.idx; \
      $(DX_PDFLATEX) refman.tex; \
      countdown=5; \
      while $(DX_EGREP) 'Rerun (LaTeX|to get cross-references right)' \
                        refman.log > /dev/null 2>&1 \
         && test $$countdown -gt 0; do \
          $(DX_PDFLATEX) refman.tex; \
          countdown=`expr $$countdown - 1`; \
      done; \
      mv refman.pdf ../@@PACKAGE@@.pdf
@end smallexample

@smallexample
  endif DX_COND_pdf
@end smallexample

@smallexample
  ## ------------------------------------------------- ##
  ## Rules specific for LaTeX (shared for PS and PDF). ##
  ## ------------------------------------------------- ##
@end smallexample

@smallexample
  if DX_COND_latex
@end smallexample

@smallexample
  DX_CLEAN_LATEX = @@DX_DOCDIR@@/latex
@end smallexample

@smallexample
  endif DX_COND_latex
@end smallexample

@smallexample
  .PHONY: doxygen-run doxygen-doc $(DX_PS_GOAL) $(DX_PDF_GOAL)
@end smallexample

@smallexample
  .INTERMEDIATE: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)
@end smallexample

@smallexample
  doxygen-run: @@DX_DOCDIR@@/@@PACKAGE@@.tag
@end smallexample

@smallexample
  doxygen-doc: doxygen-run $(DX_PS_GOAL) $(DX_PDF_GOAL)
@end smallexample

@smallexample
  @@DX_DOCDIR@@/@@PACKAGE@@.tag: $(DX_CONFIG) $(pkginclude_HEADERS)
      rm -rf @@DX_DOCDIR@@
      $(DX_ENV) $(DX_DOXYGEN) $(srcdir)/$(DX_CONFIG)
      echo Timestamp >$@@
@end smallexample

@smallexample
  DX_CLEANFILES = \
      @@DX_DOCDIR@@/@@PACKAGE@@.tag \
      -r \
      $(DX_CLEAN_HTML) \
      $(DX_CLEAN_CHM) \
      $(DX_CLEAN_CHI) \
      $(DX_CLEAN_MAN) \
      $(DX_CLEAN_RTF) \
      $(DX_CLEAN_XML) \
      $(DX_CLEAN_PS) \
      $(DX_CLEAN_PDF) \
      $(DX_CLEAN_LATEX)
@end smallexample

@smallexample
  endif DX_COND_doc
@end smallexample

@smallexample
  ----- end aminclude.am ---------------------------------------
@end smallexample

@majorheading Source Code

Download the
@uref{http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=blob_plain;f=m4/ax_prog_doxygen.m4,latest
version of @file{ax_prog_doxygen.m4}} or browse
@uref{http://git.savannah.gnu.org/gitweb/?p=autoconf-archive.git;a=history;f=m4/ax_prog_doxygen.m4,the
macro's revision history}.

@majorheading License

@w{Copyright @copyright{} 2009 Oren Ben-Kiki @email{oren@@ben-kiki.org}}

Copying and distribution of this file, with or without modification, are
permitted in any medium without royalty provided the copyright notice
and this notice are preserved. This file is offered as-is, without any
warranty.
